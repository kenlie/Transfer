{
  "_args": [
    [
      "fcbuffer@^2.1.5",
      "/home/k1/Documents/prog/EOS-backend/server/node_modules/eosjs"
    ]
  ],
  "_from": "fcbuffer@>=2.1.5 <3.0.0",
  "_id": "fcbuffer@2.1.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/fcbuffer",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fcbuffer_2.1.5_1524074074602_0.7600445855240585"
  },
  "_npmUser": {
    "email": "jslim180@gmail.com",
    "name": "jamesc"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "fcbuffer",
    "raw": "fcbuffer@^2.1.5",
    "rawSpec": "^2.1.5",
    "scope": null,
    "spec": ">=2.1.5 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eosjs"
  ],
  "_resolved": "https://registry.npmjs.org/fcbuffer/-/fcbuffer-2.1.5.tgz",
  "_shasum": "bef821b3cecb4be418dd698d2c375cd517de7f96",
  "_shrinkwrap": null,
  "_spec": "fcbuffer@^2.1.5",
  "_where": "/home/k1/Documents/prog/EOS-backend/server/node_modules/eosjs",
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/EOSIO/fcbuffer/issues"
  },
  "dependencies": {
    "bn.js": "^4.11.8",
    "bytebuffer": "^5.0.1",
    "ieee-float": "^0.6.0"
  },
  "description": "Serialization library geared towards immutable data storage such as blockchains.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "coveralls": "^2.13.1",
    "istanbul": "^0.4.5",
    "mocha": "^3.4.1"
  },
  "directories": {},
  "dist": {
    "fileCount": 10,
    "integrity": "sha512-PpDrQcKa2mhh7sdZhTodb1shbuj4+3j7gnb188jmkKXwnNP8IiTld99t10WtzZ95YC0kexZ1Dk20j1V3SigRnw==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa14ZbCRA9TVsSAnZWagAAD9kP/1cxOUpnvlUrr1OkoPoy\no22ru2CzT+e/a+brIdMgZo/fnax2UGIoQMY3cbKX0YxXvcsfLbeasHrhmqa2\n+LyBmIIwcPMeEqd6g0bJrS307Gl1x0aqSeawNwGt6SD9EKs7vwiTTk8mWSU2\n+eZQP8nhIYOEkExTj1ek9PqGiM6eZl6ZRDndyabRstAkIh7d+CXPuoE+fZlV\nqJ1fNlyAX0ANiOaKUjC54Ugc70Nc8YEx26uhusPpsodAeD20sz7R75ORm2iK\nRQMcI/7r+jR92bl76XvTTcAg4CEFjN0pe66Yf6NT1mfF3vmEOi2mVmn0/wFM\nkuar2aPdmMUlzHj0GtnblkBpGh4V6uC2kZq63IhoZYp9aXBhxjGOvSoKgd7p\nEiLjqxRZp6sUT0ur56l4Bvle2t/3cp3Meve8UBNT2YlUDYjMiT36XJ3+s2K7\n2XLeORpykx8CxS3ynU9l9Gd0ULyhC2kxYF8FGyA1I5T2BdKEZ3fNTLetjwVh\nxqbGCcZORVQxy4bVrgoCTk9d1c/IY4LI134d4PJRdooFOu9kKUZmbf7q9eXb\nxkMnjiDJQqxvz9JdDucnhJbskDiNuXeIcQUjGSachzK1oq+zg52O6W7HkHHR\nNgMBjnngOU68soQTVISE9O0z9Y7DHLR5R0MT3deDtNMgUpq0z2zi42i+8j57\nwe3N\r\n=5aJo\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "bef821b3cecb4be418dd698d2c375cd517de7f96",
    "tarball": "https://registry.npmjs.org/fcbuffer/-/fcbuffer-2.1.5.tgz",
    "unpackedSize": 73674
  },
  "gitHead": "0251402a1797060fcd764478a2788e61ce0ccc9b",
  "homepage": "https://github.com/EOSIO/fcbuffer#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "jamesc",
      "email": "jslim180@gmail.com"
    },
    {
      "name": "smetelin",
      "email": "serg.metelin@gmail.com"
    }
  ],
  "name": "fcbuffer",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/EOSIO/eosjs-fcbuffer.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs-fcbuffer)\n[![Coverage Status](https://coveralls.io/repos/github/EOSIO/eosjs-fcbuffer/badge.svg?branch=master)](https://coveralls.io/github/EOSIO/eosjs-fcbuffer?branch=master)\n[![NPM](https://img.shields.io/npm/v/fcbuffer.svg)](https://www.npmjs.org/package/fcbuffer)\n\n# FC Buffer\n\nSerialization library geared towards immutable data storage such as blockchains.\n\nFor EOS compatible implementation use this library from [eosjs](https://github.com/eosio/eosjs) instead.\n\nFC Buffer is a recent refactor from serialization code used in Bitshares and\nSteem.  Some of the serialization code was reduced and the definitions language\nadded.  The definition format may change.\n\n# Features\n\n- Validation and error reporting\n- Concise and intuitive binary format\n- Compatible with the FC library used in Graphene blockchains\n- Extendable JSON structure definitions\n- Binary and JSON string serialization\n- Unit testing and code coverage\n\n# Non Features\n\n- Consider Cap'n Proto or Protocol Buffers if your data structures need to\n  be extended at the serialization layer.\n- No streams, smaller blockchain sized objects are used\n\n# Example\n\n```javascript\nFcbuffer = require('fcbuffer') // or: Fcbuffer = require('./src')\n\nassert = require('assert')\n\ndefinitions = {\n    message_type: 'fixed_string16', // CustomType: built-in type\n    account_name: 'fixed_string32', // CustomType: built-in type\n    message: { // struct\n        fields: {\n          from: 'account_name',\n          to: 'account_name',\n          cc: 'account_name[]',\n          type: 'message_type',\n          data: 'bytes' // built-in type\n        }\n    }\n}\n\n// Warning: Do not use {defaults: true} in production\nfcbuffer = Fcbuffer(definitions, {defaults: true})\n\n// Check for errors anywhere in the definitions structure\nassert(fcbuffer.errors.length === 0, fcbuffer.errors)\n\n// If there are no errors, you'll get your structs\nvar {message} = fcbuffer.structs\n\n// Create JSON serializable object\n// returns { from: '', to: '', cc: [ '' ], type: '', data: '' }\nmessage.toObject()\n\n// Convert JSON into a more compact fcbuffer serializable object\nmsg = { from: 'jc', to: 'dan', cc: [ 'abc' ], type: '', data: '0f0f0f' }\n\n// Serialize fcbuffer object into a single binary buffer\nbuf = Fcbuffer.toBuffer(message, msg)\n// returns <Buffer 02 6a 63 07 63 68 61 72 6c 65 73 01 03 61 62 63 00 03 0f 0f 0f>\n\n// Convert binary back into a new (cloned) object\nobj = Fcbuffer.fromBuffer(message, buf)\n\n// Check that the new object matches the original\nassert.deepEqual(msg, obj)\n\n// A definition may extend and define other definitions.  This works in the initial\n// definition or later via the extend function.\nfcbuffer2 = fcbuffer.extend({\n    permission_name: 'fixed_string16',\n    permission_level: {\n        fields: {\n          actor: 'account_name',\n          permission: 'permission_name'\n        }\n    }\n})\n\nassert(fcbuffer2.errors.length === 0, fcbuffer2.errors)\n\nvar {permission_level} = fcbuffer2.structs\npermission_level.toObject()\n// toObject returns: { actor: '', permission: '' }\n\n```\n\n# References\n\n- Built-in Types: [types.js](./src/types.js)\n- EOS Definitions: [generated.json](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json)\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/EOSIO/fcbuffer.git"
  },
  "scripts": {
    "browserify-mocha": "browserify src/index.test.js > mocha/mocha.test.js",
    "build": "node_modules/babel-cli/bin/babel.js src --out-dir lib",
    "coverage": "istanbul cover _mocha -- -R spec src/index.test.js",
    "coveralls": "npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls",
    "prepublish": "npm run build",
    "test": "mocha src/index.test.js"
  },
  "version": "2.1.5"
}
